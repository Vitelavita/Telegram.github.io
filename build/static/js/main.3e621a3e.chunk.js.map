{"version":3,"sources":["App/Firebase/Firebase.js","App/Components/Chat/MessageHeader/MessageHeader.jsx","App/Components/Chat/MessageSender/MessageSender.jsx","App/Components/Chat/Message/Message.jsx","App/Components/Chat/Chat.jsx","App/Layouts/Sidebar/SidebarRow/SidebarRow.jsx","App/Layouts/Sidebar/SidebarBottom/SidebarBottom.jsx","App/Layouts/Sidebar/Sidebar.jsx","App/Pages/ChatPage/ChatPage.jsx","App/Redux/Auth/AuthType.js","App/Pages/LoginPage/Login.jsx","App/Redux/Auth/AuthAction.js","App/Pages/MainPage/MainPage.jsx","App.js","reportWebVitals.js","App/Redux/Auth/AuthReducer.js","App/Redux/RootReducer.js","App/Redux/Store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","MessageHeader","massages","useState","channelName","setChannelName","seed","setSeed","channelId","useParams","db","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","data","Math","floor","random","img","className","Avatar","src","Date","length","timeStamp","toDate","toUTCString","IconButton","MessageSender","handleChange","setInputText","inputText","onSubmit","e","placeholder","value","onChange","target","type","Message","currentUser","map","message","displayName","userPhotoURL","id","Chat","useSelector","state","auth","channel","setChannel","setMassages","docs","orderBy","console","log","style","flex","preventDefault","add","FieldValue","serverTimestamp","photoURL","SidebarRow","to","SidebarBottom","Hidden","smDown","Sidebar","handleAddNewChannel","onClick","ChatPage","newChannel","prompt","path","USER_SIGN_IN","USER_SIGN_OUT","Login","dispatch","useDispatch","socialLogin","selectedProvider","a","provider","FacebookAuthProvider","GoogleAuthProvider","signInWithPopup","result","user","payload","alt","MainPage","isAuthenticated","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","rootReducer","combineReducers","middlware","logger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e621a3e.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/database\";\nimport \"firebase/compat/storage\";\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDpx2wHDPYOMUPiU8SP9C06uA0c_oJU25s\",\n  authDomain: \"vite-legram.firebaseapp.com\",\n  projectId: \"vite-legram\",\n  storageBucket: \"vite-legram.appspot.com\",\n  messagingSenderId: \"718663980669\",\n  appId: \"1:718663980669:web:f7e4bdda34eaaffcef4314\",\n  measurementId: \"G-439SQ3R5QR\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nfirebase.firestore()\n\nexport default firebase;","import { Avatar, IconButton } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {useParams} from 'react-router-dom'\nimport firebase from '../../../Firebase/Firebase'\n\nimport './StyleHeader.css'\n\nexport default function MessageHeader({massages}) {\n\n    const [channelName, setChannelName] = useState('')\n    const [seed,setSeed] = useState()\n    const {channelId } = useParams()\n    const db = firebase.firestore()\n    useEffect(()=>{\n     \n        const unsubscribe = db.collection('channels').doc(channelId)\n        .onSnapshot(\n            snapshot => \n                (setChannelName(snapshot.data())))\n  \n    return () =>{\n        unsubscribe()\n    }\n    },[db, channelId])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()* 5000))\n    },[channelId])\n    \n    const img = `https://avatars.dicebear.com/api/human/${seed}.svg`\n    return ( \n        <div className='header'>\n            <div className='header_main'>\n                <div className='header_left'>\n                    <Avatar src={img} />\n                    <div className='header_info'>\n                        <strong>{channelName.channelName}</strong>\n                        <p>\n                          Last seen at  {new Date (massages[massages.length -1]?.timeStamp?.toDate()).toUTCString()}\n                        </p>\n                    </div>\n                </div>\n                <IconButton>\n                    <MoreHorizIcon />\n                </IconButton> \n            </div>\n            \n        </div>\n    )\n}\n\n","import React from 'react'\nimport './MessageSender.css'\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicNoneIcon from '@material-ui/icons/MicNone';\n\n\n\nexport default function MessageSender({handleChange,setInputText, inputText}) {\n    \n    \n    return (\n        <div className='message_sender'>\n            <form   onSubmit={(e)=>handleChange(e)}>\n                <div className='message'>\n                    <TelegramIcon />\n              \n                    <div className='send_input'>\n                        <input \n                        placeholder='Write Your Message Here'\n                        value={inputText}\n                        onChange={(e)=>setInputText(e.target.value)}\n                        />\n                    </div>\n                    <button type='submit' className='hidden_btn'></button>\n               \n               \n                <TimerIcon />\n                <EmojiEmotionsIcon />\n                <MicNoneIcon />\n                \n            </div>           \n            </form>\n        </div>\n    )\n}\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport './StyleMessage.css'\n// import {format} from 'date-fns'\n// import { convertTimeStamp } from '../../Utils/Utils'\n\nexport default function Message({massages,currentUser }) {\n    // console.log(massages)\n    return (\n        <div className='chat'>\n           { massages.map(message =>(\n                <div \n                key={message.id} \n                className={`message_body ${ currentUser.displayName === message.displayName && 'message_body_receiver'} `}>\n                     \n                    <Avatar src={message?.userPhotoURL}/>\n                    <div className={`message_container`}>\n                        <p \n                        className={`messages ${ currentUser.displayName === message.displayName && 'message_receiver'} `}>\n                            {message?.massages}\n                            </p>\n                        {/* <p className='time_stamp '>date</p> */}\n                    </div>\n                </div>\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport MessageHeader from './MessageHeader/MessageHeader'\nimport MessageSender from './MessageSender/MessageSender'\nimport firebase from '../../Firebase/Firebase'\nimport {useParams} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport Message from './Message/Message'\n\nexport default function Chat() {\n    const {channelId} = useParams()\n    const {currentUser } = useSelector(state => state.auth)\n    const [channel, setChannel] = useState([])\n    const [massages,setMassages] = useState([])\n    const [inputText, setInputText]=useState('')\n\n    const db = firebase.firestore()\n\n    // handle Submit to handle the input and take the message and send it to the firebase\n    const handleSubmit= e=>{\n        e.preventDefault();\n        console.log(inputText);\n        if (channelId){\n            db.collection('channels').doc(channelId).collection('massages').add({\n                massages: inputText,\n                timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                displayName: currentUser.displayName,\n                userPhotoURL: currentUser.photoURL\n\n            })\n            setInputText('')\n        }\n      \n    }\n    // get the all channel names\n    useEffect(()=>{\n        if (channelId){\n            db.collection('channels').onSnapshot(snapshot => \n                setChannel(\n                       snapshot.docs.map(doc =>({\n                       id: doc.id,\n                       data: doc.data()\n                   })\n               )\n           ))\n        }\n      \n    \n         // \n     },[db,channel,channelId ])\n    \n     // get all massages from the db\n    useEffect(()=>{\n        if (channelId){\n            db.collection('channels').doc(channelId).collection('massages')\n            .orderBy('timeStamp','asc')\n            .onSnapshot(snapshot=>{\n                 setMassages(snapshot.docs.map(doc=> doc.data()))\n             })\n      \n        }\n       \n        \n    },[channelId, db, setMassages])\n \n\n    console.log(massages);\n    return (\n        <div style={{flex: '0.7'}}> \n            <MessageHeader massages={massages} />\n            <Message currentUser={currentUser} massages={massages}/>\n                \n            <MessageSender \n            inputText={inputText} \n            handleChange={handleSubmit} \n            setInputText={setInputText}/> \n        </div>\n    )\n}\n\n\n","import { Avatar} from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport firebase from '../../../Firebase/Firebase'\nimport { Link } from 'react-router-dom'\nimport './StyleSidebarRow.css'\n\nexport default function SidebarRow({ id,channelName}) {\n\n    const [massages, setMassages] = useState([])\n    const db = firebase.firestore()\n    const [seed, setSeed] = useState() \n\n    useEffect(()=>{\n        if (id){\n            db.collection('channels').doc(id).collection('massages')\n            .orderBy('timeStamp','desc')\n            .onSnapshot(snapshot=>{\n                 setMassages(snapshot.docs.map(doc=> doc.data()))\n             })\n      \n        }\n       \n        \n    },[id, db, setMassages])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()* 5000))\n\n    },[id])\n\n    const img = `https://avatars.dicebear.com/api/human/${seed}.svg`\n    return (\n        <Link className='sidebar_row_main' to={`/channel/${id}`}>\n            <div className='sidebar_row'>\n                <div className='sidebar_left'>\n                    <Avatar src={img} />\n                    <div className='sidebar_info'>\n                        <strong  >{channelName}</strong>\n                        <p className='text'>{massages[0]?.massages}</p>\n                    </div>\n                </div>\n                <p>time</p>\n            </div>\n            <div className='line'/>\n        </Link>\n        \n    )\n}\n","import { Avatar, Hidden } from '@material-ui/core'\nimport React from 'react'\nimport CommentIcon from '@material-ui/icons/Comment';\nimport CallIcon from '@material-ui/icons/Call';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport './StyleSidebarBottom.css'\nimport { useSelector } from 'react-redux';\n\nexport default function SidebarBottom() {\n    const {currentUser} = useSelector(state => state.auth)\n    return (\n        <div className='sidebar_bottom_main'>\n            <div className='sidebar_bottom_icons'>\n                <Avatar src={currentUser?.photoURL ||'https://pagesix.com/wp-content/uploads/sites/3/2020/03/bebe-rexha-30.jpg?quality=80&strip=all'} />\n                <CallIcon />\n                <Hidden smDown>\n                    <CommentIcon />\n                    <SettingsIcon />\n                </Hidden>\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\n\nimport './StyleSidebar.css'\nimport { IconButton } from '@material-ui/core';\nimport SidebarRow from './SidebarRow/SidebarRow';\nimport SidebarBottom from './SidebarBottom/SidebarBottom';\n\n\nexport default function Sidebar({handleAddNewChannel,channel}) {\n\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_header'>\n                <div className='search'>\n                    <SearchIcon />\n                    <input type='text' placeholder='Search for channels or users' />\n                </div>\n                <IconButton onClick={handleAddNewChannel}>\n                    <BorderColorIcon  />\n                </IconButton>\n            </div>\n            {\n                channel.map(channel =>(\n                    <SidebarRow key={channel.id} id={channel.id} channelName={channel.data.channelName} /> \n                ))\n\n            }\n            \n            <SidebarBottom />\n        </div>\n    )\n}","\nimport React, { useEffect, useState } from 'react'\nimport Chat from '../../Components/Chat/Chat'\nimport Sidebar from '../../Layouts/Sidebar/Sidebar'\nimport { Switch,  Route} from \"react-router-dom\";\nimport firebase from '../../Firebase/Firebase'\nimport './StyleChatPage.css'\n\nexport default function ChatPage() {\n    const [channel,setChannel] = useState([])\n    const db = firebase.firestore();\n\n    useEffect(()=>{\n       const unsubscribe = db.collection('channels').onSnapshot(snapshot => \n         setChannel(\n                snapshot.docs.map(doc =>({\n                id: doc.id,\n                data: doc.data()\n            })\n        )\n    ))\n    return () =>{\n        unsubscribe()\n    }\n        // \n    },[db,channel, ])\n   \n       \n    \n  \n    const handleAddNewChannel =() =>{\n       const newChannel = prompt('Enter a Channel Name');\n       if(newChannel){\n        db.collection('channels').add({\n            channelName: newChannel\n        })\n       }\n       \n    }\n    return (\n        <div className='chat_page'>\n            <>\n                <Sidebar channel={channel} handleAddNewChannel={handleAddNewChannel}/>\n                <Switch>\n                    <Route  path='/channel/:channelId'>\n                        <Chat/>\n                    </Route>\n                </Switch>\n            </>\n           \n           \n           \n        </div>\n    )\n}\n","export const USER_SIGN_IN = 'USER_SIGN_IN'\n\nexport const USER_SIGN_OUT = 'USER_SIGN_OUT'","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport './StyleLogin.css'\nimport firebase from '../../Firebase/Firebase'\nimport { userSignIn } from '../../Redux/Auth/AuthAction';\n\nexport default function Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = (selectedProvider) => {\n        socialLogin(selectedProvider);\n    };\n     const socialLogin = async (selectedProvider) => {\n\n        let provider;\n    \n        const auth = firebase.auth();\n        if (selectedProvider === \"facebook\") {\n            provider = new firebase.auth.FacebookAuthProvider();\n        }\n        if (selectedProvider === \"google\") {\n            provider = new firebase.auth.GoogleAuthProvider();\n        }\n        try {\n            const result = await auth.signInWithPopup(provider);\n            console.log(result.user);\n            dispatch(userSignIn(result.user));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n\n   \n    return (\n        <div className='login'>\n            <img src={img} alt=' Logo' />\n            <button onClick ={()=>signIn('google')}>Login to Vite-legram</button>\n        </div>\n    )\n}\n\nconst img ='https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.fbcd.co%2Fproducts%2Foriginal%2F53f47d68e53f7d439d78ef4565fbe209afb23cd509bf3275dc1cbad4efebb224.jpg&f=1&nofb=1'\n\n\n","import { USER_SIGN_IN, USER_SIGN_OUT } from \"./AuthType\";\n\n\nexport const userSignIn = user =>({\n    type: USER_SIGN_IN,\n    payload: user\n}) \n\nexport const userSignOut = () =>({\n    type: USER_SIGN_OUT,\n  \n}) ","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ChatPage from '../ChatPage/ChatPage'\nimport Login from '../LoginPage/Login'\n\nexport default function MainPage() {\n    const { isAuthenticated } = useSelector(state =>  state.auth)\n    return (\n        <div className='main_page'>\n            {!isAuthenticated?\n             <Login /> : <ChatPage />\n            }\n           \n        </div>\n    )\n}\n","import React from 'react'\nimport MainPage from './App/Pages/MainPage/MainPage'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line \nimport { USER_SIGN_IN, USER_SIGN_OUT } from \"./AuthType\";\n\n\nconst initialState ={\n    isAuthenticated: false,\n    currentUser: null\n}\n\nconst authReducer =(state = initialState , {type, payload}) =>{\n    switch(type){\n        case USER_SIGN_IN:\n            return{\n                ...state,\n                isAuthenticated: true,\n                currentUser: payload,\n            }\n        case USER_SIGN_OUT: \n            return{\n                ...state,\n                isAuthenticated: false,\n                currentUser: null,\n            } \n        default: return state\n\n    }\n}\n\n\nexport default  authReducer;","// eslint-disable-next-line strict\n'use strict'\nimport {\n    combineReducers\n} from 'redux';\n\nimport authReducer from './Auth/AuthReducer'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n})\nexport default rootReducer","import {\n    createStore,\n    applyMiddleware\n} from 'redux';\n\n\nimport rootReducer from './RootReducer'\nimport logger from 'redux-logger';\n\nconst middlware = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlware));\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './App/Redux/Store'\nimport { BrowserRouter } from 'react-router-dom' \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}